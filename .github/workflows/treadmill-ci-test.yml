name: treadmill-ci-test
env:
  TERM: xterm # Makes tput work in actions output

# Controls when the action will run. Triggers the workflow on pull request and
# merge group checks:
#
# KEEP IN SYNC WITH `environment:` ATTRIBUTE BELOW:
on:
  push:
    branches:
      - master
      - dev/tock-hardware-ci
  # Pull requests from forks will not have access to the required GitHub API
  # secrets below, even if they are using an appropriate deployment environment
  # and the workflow runs have been approved according to this environment's
  # rules. We don't know whether this is a bug on GitHub's end or deliberate.
  # Either way, for now we disable this workflow to run on PRs until we have
  # an API proxy that securely performs these GitHub API calls (adding runners
  # and starting Treadmill jobs with those runner registration tokens), which
  # allows this workflow to run without access to repository secrets.
  #pull_request:
  merge_group: # Run CI for the GitHub merge queue

permissions:
  contents: read

jobs:
  treadmill-ci:
    uses: ./.github/workflows/treadmill-ci.yml
    with:
      # Only run on a specific repository, as others will not have the right
      # environments set up and secrets configured. Forks may want to change
      # this parameter.
      repository-filter: 'tock/tock-hardware-ci'

      # Provide access to the required Treadmill secrets by running in the
      # appropriate environment (depending on the on: triggers above)
      job-environment: ${{ github.event_name == 'pull_request' && 'treadmill-ci' || 'treadmill-ci-merged' }}

      # This workflow tests the tock-hardware-ci scripts itself, so take the
      # current GITHUB_SHA:
      tock-hardware-ci-ref: ${{ env.GITHUB_SHA }}

      # Use the latest upstream Tock kernel / userspace components:
      tock-kernel-ref: 'master'
      libtock-c-ref: 'master'
      
    secrets: inherit
